name: Main

on:
  workflow_dispatch:
  pull_request_target:
    branches:
      - main
      - release/*
  push:
    tags:
      - "v*"
    branches:
      - main
      - release/*

concurrency:
  group: {% raw %}${{ github.workflow }}-${{ github.ref }}{% endraw %}
  cancel-in-progress: true

env:
  MAIN_PYTHON_VERSION: '3.13'

jobs:
  init:
    name: Check triggering source
    runs-on: ubuntu-latest
    outputs:
      proceed: {% raw %}${{ steps.check.outputs.proceed }}{% endraw %}
    steps:
      - id: check
        run: |
          ALLOWED=0
          {% raw %}echo "Triggered by: ${{ github.actor }} via ${{ github.event_name }}"
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]] ||
             [[ "${{ github.actor }}" == "github-actions[bot]" ]] ||
             [[ "${{ github.actor }}" == "dependabot[bot]" ]]; then{% endraw %}
            echo "proceed=true" >> "$GITHUB_OUTPUT"
          else
            echo "proceed=false" >> "$GITHUB_OUTPUT"
          fi

  quality:
    if: needs.init.outputs.proceed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache pre-commit hooks
        uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: {% raw %}pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}{% endraw %}

      - name: Set up Python + Environment
        uses: ./.github/actions/setup-python-env

      - name: Run code quality checks
        run: make check

  tests:
    if: needs.init.outputs.proceed == 'true'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        python-version: [ "3.9", "3.10", "3.11", "3.12", "3.13" ]
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python + Environment
        uses: ./.github/actions/setup-python-env
        with:
          python-version: {% raw %}${{ matrix.python-version }}{% endraw %}

      - name: Run tests
        run: make test

{%- if cookiecutter.codecov == "y" %}

      - name: Upload coverage to Codecov
        if: {% raw %}${{ matrix.python-version == env.MAIN_PYTHON_VERSION }}{% endraw %}
        uses: codecov/codecov-action@v5
        with:
          token: {% raw %}${{ secrets.CODECOV_TOKEN }}{% endraw %}

{%- endif %}

  publish-to-testpypi:
    if: github.ref == 'refs/heads/main'
    needs: [ quality, tests ]
    runs-on: ubuntu-latest
    environment:
      name: test-pypi
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for hatch-vcs to generate full version
          fetch-tags: true

      - name: Set up Python + Environment
        uses: ./.github/actions/setup-python-env

      - name: Run version checks
        run: make check-version

      - name: Build project
        run: make build

      - name: Publish to TestPyPI
        run: make publish-test
        env:
          TEST_PYPI_TOKEN: {% raw %}${{ secrets.TEST_PYPI_TOKEN }}{% endraw %}
